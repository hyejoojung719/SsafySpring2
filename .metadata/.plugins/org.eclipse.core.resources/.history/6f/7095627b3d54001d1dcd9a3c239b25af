package com.ssafy.car.controller;

import java.io.File;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.UUID;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.ssafy.car.model.CarDto;
import com.ssafy.car.model.FileInfoDto;
import com.ssafy.car.model.service.CarService;

@Controller
@RequestMapping(value="/car")
public class CarController {

	@Autowired
	ServletContext servletContext;

	CarService carService;

	// 차 등록 페이지 이동
	@GetMapping("/regist")
	public String goRegist() {
		return "/car/regist";
	}

	// 차 등록 하기
	@PostMapping("/regist")
	public String regist(
			@RequestParam("number") String number,
			@RequestParam("model") String model,
			@RequestParam("price") int price,
			@RequestParam("brand") String brand,
			@RequestParam("upfile") MultipartFile[] files, 
			HttpSession session,
			RedirectAttributes redirectAttributes) throws SQLException{

		CarDto car = new CarDto();
		car.setBrand(brand);
		car.setModel(model);
		car.setNumber(number);
		car.setPrice(price);

		// 파일 정보가 있는 경우
		if(!files.isEmpty()) {
			// 1. 파일 업로드
			// 파일 업로드할 경로
			String path = servletContext.getRealPath("/upload");
			String today = new SimpleDateFormat("yyMMdd").format(new Date());
			File folder = new File(path+File.separator+today);

			// 해당 폴더가 없다면 만들기
			if(!folder.exists()) folder.mkdirs();

			//파일 저장
			//파일 업로드
			String originFile = files.getOriginalFilename();    //원본 파일 명
			//저장될 파일명 만들기
			String saveFile = UUID.randomUUID().toString() + originFile.substring(originFile.lastIndexOf('.'));
			// 파일 저장
			files.transferTo(new File(folder, saveFile));

			// 2. 파일 데이터 DB에 저장 
			FileInfoDto fileInfo = new FileInfoDto();
			fileInfo.setIsbn(book.getIsbn());
			fileInfo.setSaveFolder(today);
			fileInfo.setSaveFile(saveFile);
			fileInfo.setOriginFile(originFile);
			// 책 정보에 파일 데이터 추가
			book.setFileInfo(fileInfo);
		}

		// 책 정보 DB에 저장 
		bookService.insertBook(book);

		// 책 목록 화면으로 이동
		return "redirect:/book/list";

		return "";
	}

	// 차 목록 페이지 이동
	@GetMapping("/list")
	public String goList() {
		return "list";
	}

	// 차 목록 불러오기 

}
